- name: token
  debug:
    msg: "[master] k8s_token_holder k8s token is {{ hostvars['k8s_token_holder']['token'] | default('MISSING') }}"

- name: hash
  debug:
    msg: "[master] k8s_token_holder k8s hash is {{ hostvars['k8s_token_holder']['hash']  | default('MISSING') }}"

# (guarda) verifique dados antes do join
- name:  validar variáveis para join
  ansible.builtin.assert:
    that:
      - k8s_master_node_ip is defined
      - (hostvars['k8s_token_holder']['token'] | default('')) | length > 0
      - (hostvars['k8s_token_holder']['hash']  | default('')) | regex_search('^[0-9a-f]{64}$')
    fail_msg: "Faltando endpoint/token/hash válido para kubeadm join."

- name: kubeadm reset node cluster config
  ansible.builtin.command: kubeadm reset --force
  register: kubeadm_reset_node
  changed_when: false
  failed_when: kubeadm_reset_node.rc != 0
  # dica: se não quiser resetar sempre, condicione:
  # when: force_run | default(false)

- name: join node to cluster
  ansible.builtin.shell: >
    kubeadm join {{ k8s_master_node_ip }}:{{ k8s_api_secure_port | default('6443') }}
    --token {{ hostvars['k8s_token_holder']['token'] }}
    --discovery-token-ca-cert-hash sha256:{{ hostvars['k8s_token_holder']['hash'] }}
  args:
    creates: /etc/kubernetes/kubelet.conf
