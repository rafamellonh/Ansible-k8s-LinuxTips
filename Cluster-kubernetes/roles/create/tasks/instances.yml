- name: Create Network interface
  delegate_to: localhost
  azure.azcollection.azure_rm_networkinterface:
    resource_group: "{{ resource_group }}"
    name: "nic_{{ item }}"
    virtual_network: "{{ vnet_name }}"
    subnet: "{{ subnet_name }}"
    security_group: "{{ nsg_name }}"
    ip_configurations:
      - name: "ipconfig_{{ item }}"
        public_ip_address_name: "public_ip_{{ item }}"
        private_ip_address_version: IPv4
        private_ip_allocation_method: Dynamic
    tags: "{{ tags_kube }}"
  register: nic
  loop: "{{ vm_ids }}"

- name: Create instances
  delegate_to: localhost
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "instance-{{ item }}"
    vm_size: "{{ size_instances }}"
    admin_username: "{{ admin_user }}"
    #admin_password: "{{ admin_password }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ admin_user }}/.ssh/authorized_keys
        #key_data: "{{ lookup('file', ssh_public_key_path) }}" 
        key_data: "{{ ssh_key_private_info.state.public_key }}"
    network_interfaces: "nic_{{ item }}"
    image:
      offer: "{{ os_image_offer }}"
      publisher: "{{ os_image_publisher }}"
      sku: "{{ os_image_sku }}"
      version: latest
    managed_disk_type: "{{ managed_disk_type }}"
    tags: "{{ tags_kube }}"
  register: vm
  loop: "{{ vm_ids }}"

- name: Add new instances to host group
  delegate_to: localhost
  add_host:
    name: "instance-{{ item }}"
    groups: k8s_nodes
    ansible_user: "{{ admin_user }}"
    ansible_password: "{{ admin_password }}"
  loop: "{{ vm_ids }}"
  when: vm is changed

- name: Add new instances to file hosts
  delegate_to: localhost
  become: true
  lineinfile:
    path: ./hosts
    insertafter: "[kubernetes]" 
    regexp: '^instance_{{ item.item }}\s'
    line: 'instance-{{ item.item }} ansible_host={{ item.publicipaddresses[0].ip_address  }} ssh_private_key_file={{ ssh_private_key_path }}'
  loop: "{{ public_ip_info.results }}"
  #when: vm is changed


